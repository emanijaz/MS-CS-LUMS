x = colnames(m),
y = colnames(m),
z = m, type = "heatmap"
)
fig
# m <- cor(Historic_NPCC_2016_2020[, which( tmp == "numeric" )],
#          use = "complete.obs")
m <- multicolenarity_check
fig <- plot_ly(
x = colnames(m),
y = colnames(m),
z = m, type = "heatmap"
)
fig
fig <- plot_ly(
x = colnames(m),
y = colnames(m),
z = m, type = "heatmap"
)
fig
m <- Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020
m
m <- Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020[,c(2,3,5,6)]
m
cor(m)
m <- cor(Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020[,c(2,3,5,6)])
fig <- plot_ly(
x = colnames(m),
y = colnames(m),
z = m, type = "heatmap"
)
fig
m
View(m)
m
m <- Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020[,c(2,3,5,6)]
m
m <- Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020[,c(2,3,5,6)]
colnames(m) = c("Monthly Mean Apparent temperature", "Monthly Min Apparent temperature","Monthly Max Apparent temperature", "Monthly Energy MWh")
m <- cor(m)
fig <- plot_ly(
x = colnames(m),
y = colnames(m),
z = m, type = "heatmap"
)
fig
m <- Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020[,c(2,3,4,5)]
m <- Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020[,c(2,3,5,4)]
colnames(m) = c("Monthly Mean Apparent temperature", "Monthly Min Apparent temperature","Monthly Max Apparent temperature", "Monthly Peak Power MW")
m <- cor(m)
fig <- plot_ly(
x = colnames(m),
y = colnames(m),
z = m, type = "heatmap"
)
fig
m <- Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020[,c(2,3,5,6)]
colnames(m) = c("Monthly Mean Apparent temperature", "Monthly Min Apparent temperature","Monthly Max Apparent temperature", "Monthly Energy MWh")
m <- cor(m)
fig <- plot_ly(
x = colnames(m),
y = colnames(m),
z = m, type = "heatmap"
)
fig
library(data.table)
library(forecast)
library(plotly)
Historic_NPCC_2016_2020 = read.csv('2016-2020-Historic-Data.csv')[,-3] ## remove Predicted Column
str(Historic_NPCC_2016_2020)
Historic_NPCC_2016_2020$Time = as.POSIXct(Historic_NPCC_2016_2020$Time)
summary(Historic_NPCC_2016_2020)
class(Historic_NPCC_2016_2020)
tmp = as.character(unlist(sapply(Historic_NPCC_2016_2020, class)))[-2]  ## removing 2nd time column
#### correlation ####
{
correlation = data.frame(cor(Historic_NPCC_2016_2020[, which( tmp == "numeric" )],
use = "complete.obs"))
class(correlation$hourly_load)
initially_selected_variables = row.names(correlation[correlation$hourly_load >= 0.7 |
correlation$hourly_load <= -0.7,])
multicolenarity_check = data.frame(cor(Historic_NPCC_2016_2020[,initially_selected_variables],
use = "complete.obs"))
row.names(multicolenarity_check[multicolenarity_check$Lahore_apparentTemperature < 0.8 &
multicolenarity_check$Lahore_apparentTemperature > -0.8,])
}
## aggregation on basis of monthly energy and peak power
{
Filtered_Historic_NPCC_2016_2020 = Historic_NPCC_2016_2020[, c(1,2,8)] ## fetch Time, hourly_load, Lahore_Apparent_Temperature
Filtered_Historic_NPCC_2016_2020 = Filtered_Historic_NPCC_2016_2020[complete.cases(Filtered_Historic_NPCC_2016_2020), ]
# summary(Filtered_Historic_NPCC_2016_2020)
Filtered_Historic_NPCC_2016_2020$Month_Year = paste0(format(Filtered_Historic_NPCC_2016_2020$Time, format = "%B"), "_",
format(Filtered_Historic_NPCC_2016_2020$Time, format = "%Y"))
Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020 = aggregate(Filtered_Historic_NPCC_2016_2020$hourly_load,
list(Filtered_Historic_NPCC_2016_2020$Month_Year), sum)
colnames(Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020) = c("Month_Year", "NPCC_Monthly_Energy_MWh")
tmp = aggregate(cbind(Filtered_Historic_NPCC_2016_2020$hourly_load,Filtered_Historic_NPCC_2016_2020$Lahore_apparentTemperature),
list(Filtered_Historic_NPCC_2016_2020$Month_Year), max)
colnames(tmp) = c("Month_Year", "NPCC_Monthly_Peak_Power_MW", "NPCC_Monthly_Max_Lahore_Apparent_Temperature_C")
Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020 = merge(tmp, Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020)
## Min apparent temperature
tmp = aggregate(Filtered_Historic_NPCC_2016_2020$Lahore_apparentTemperature,
list(Filtered_Historic_NPCC_2016_2020$Month_Year), min)
colnames(tmp) = c("Month_Year","NPCC_Monthly_Min_Lahore_Apparent_Temperature_C")
Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020 = merge(tmp, Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020)
## Mean apparent temperature
tmp = aggregate(Filtered_Historic_NPCC_2016_2020$Lahore_apparentTemperature,
list(Filtered_Historic_NPCC_2016_2020$Month_Year), mean)
colnames(tmp) = c("Month_Year","NPCC_Monthly_Mean_Lahore_Apparent_Temperature_C")
Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020 = merge(tmp, Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020)
# Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020 = Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020[,-c(3,5)] ## remove
tmp = data.frame(Month_Year =paste0( month.name, "_2021")[1:10])
Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020 = merge(Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020, tmp, all = TRUE)
Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020$Date =
as.Date(paste("1" , Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020$Month_Year), format = "%d %B_%Y")
Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020 =
Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020[order(Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020$Date), ]
}
tmp = cor(Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020[,-c(1,7)], use = "complete.obs") ## removing Month_Year and Date columns
tmp = acf(Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020$NPCC_Monthly_Mean_Lahore_Apparent_Temperature_C)
Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020$Lag_11_NPCC_Monthly_Mean_Lahore_Apparent_Temperature_C =
shift(Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020$NPCC_Monthly_Mean_Lahore_Apparent_Temperature_C, 11)
## finding correlation between Lahore Apparent temperature and Lagged Lahore Apparent Temperature 11 values
cor(Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020[,c(2,6)], use = "complete.obs")
Apparent_Temperature_LM = lm(NPCC_Monthly_Mean_Lahore_Apparent_Temperature_C~Lag_11_NPCC_Monthly_Mean_Lahore_Apparent_Temperature_C,
data=Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020)
summary(Apparent_Temperature_LM)
row.names(Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020) = 1:nrow(Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020)
Predicted_Apparent_Temperature =  predict(Apparent_Temperature_LM, Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020[25:34,]) ## giving rows to be predicted  as input
View(Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020)
Historic_NPCC_2021 = read.csv("NPCC Historic Data 2021-01-01-2021-10-31.csv")[,-3]
Historic_NPCC_2021$Time = as.POSIXct(Historic_NPCC_2021$Time)
summary(Historic_NPCC_2021)
class(Historic_NPCC_2021)
Historic_NPCC_2021 = Historic_NPCC_2021[, c(1,2,8)] ## fetch Time,hourly_load, Lahore_Apparent_Temperature
Historic_NPCC_2021 = Historic_NPCC_2021[complete.cases(Historic_NPCC_2021), ]
Historic_NPCC_2021$Month_Year = paste0(format(Historic_NPCC_2021$Time, format = "%B"), "_",
format(Historic_NPCC_2021$Time, format = "%Y"))
Monthly_Aggregated_Filtered_Historic_NPCC_2021 = aggregate(Historic_NPCC_2021$hourly_load,
list(Historic_NPCC_2021$Month_Year), sum)
colnames(Monthly_Aggregated_Filtered_Historic_NPCC_2021) = c("Month_Year", "NPCC_Monthly_Energy_MWh")
tmp = aggregate(Historic_NPCC_2021$Lahore_apparentTemperature, list(Historic_NPCC_2021$Month_Year), mean)
colnames(tmp) = c("Month_Year", "NPCC_Monthly_Mean_Lahore_Apparent_Temperature_C")
Monthly_Aggregated_Filtered_Historic_NPCC_2021 = merge(tmp, Monthly_Aggregated_Filtered_Historic_NPCC_2021)
tmp = aggregate(Historic_NPCC_2021$hourly_load,
list(Historic_NPCC_2021$Month_Year), max)
colnames(tmp) = c("Month_Year", "NPCC_Monthly_Peak_Power_MW")
Monthly_Aggregated_Filtered_Historic_NPCC_2021 = merge(tmp, Monthly_Aggregated_Filtered_Historic_NPCC_2021)
Monthly_Aggregated_Filtered_Historic_NPCC_2021$Date =
as.Date(paste("1" , Monthly_Aggregated_Filtered_Historic_NPCC_2021$Month_Year), format = "%d %B_%Y")
Monthly_Aggregated_Filtered_Historic_NPCC_2021 =
Monthly_Aggregated_Filtered_Historic_NPCC_2021[order(Monthly_Aggregated_Filtered_Historic_NPCC_2021$Date), ]
Monthly_Mean_Lahore_Apparent_Temperature_Metrics =
forecast::accuracy(Predicted_Apparent_Temperature, Monthly_Aggregated_Filtered_Historic_NPCC_2021$NPCC_Monthly_Mean_Lahore_Apparent_Temperature_C)
source("~/Desktop/MLTF app/MLTF/data/Linear_Model.R", echo=TRUE)
Historic_NPCC_2021 = read.csv("NPCC Historic Data 2021-01-01-2021-10-31.csv")[,-3]
Historic_NPCC_2021$Time = as.POSIXct(Historic_NPCC_2021$Time)
summary(Historic_NPCC_2021)
class(Historic_NPCC_2021)
Historic_NPCC_2021 = Historic_NPCC_2021[, c(1,2,8)] ## fetch Time,hourly_load, Lahore_Apparent_Temperature
Historic_NPCC_2021 = Historic_NPCC_2021[complete.cases(Historic_NPCC_2021), ]
Historic_NPCC_2021$Month_Year = paste0(format(Historic_NPCC_2021$Time, format = "%B"), "_",
format(Historic_NPCC_2021$Time, format = "%Y"))
Monthly_Aggregated_Filtered_Historic_NPCC_2021 = aggregate(Historic_NPCC_2021$hourly_load,
list(Historic_NPCC_2021$Month_Year), sum)
colnames(Monthly_Aggregated_Filtered_Historic_NPCC_2021) = c("Month_Year", "NPCC_Monthly_Energy_MWh")
tmp = aggregate(Historic_NPCC_2021$Lahore_apparentTemperature, list(Historic_NPCC_2021$Month_Year), mean)
colnames(tmp) = c("Month_Year", "NPCC_Monthly_Mean_Lahore_Apparent_Temperature_C")
Monthly_Aggregated_Filtered_Historic_NPCC_2021 = merge(tmp, Monthly_Aggregated_Filtered_Historic_NPCC_2021)
tmp = aggregate(Historic_NPCC_2021$hourly_load,
list(Historic_NPCC_2021$Month_Year), max)
colnames(tmp) = c("Month_Year", "NPCC_Monthly_Peak_Power_MW")
Monthly_Aggregated_Filtered_Historic_NPCC_2021 = merge(tmp, Monthly_Aggregated_Filtered_Historic_NPCC_2021)
Monthly_Aggregated_Filtered_Historic_NPCC_2021$Date =
as.Date(paste("1" , Monthly_Aggregated_Filtered_Historic_NPCC_2021$Month_Year), format = "%d %B_%Y")
Monthly_Aggregated_Filtered_Historic_NPCC_2021 =
Monthly_Aggregated_Filtered_Historic_NPCC_2021[order(Monthly_Aggregated_Filtered_Historic_NPCC_2021$Date), ]
#
# Monthly_Mean_Lahore_Apparent_Temperature_Metrics =
#   forecast::accuracy(Predicted_Apparent_Temperature, Monthly_Aggregated_Filtered_Historic_NPCC_2021$NPCC_Monthly_Mean_Lahore_Apparent_Temperature_C)
}
View(Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020)
View(Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020)
View(Monthly_Aggregated_Filtered_Historic_NPCC_2021)
View(Monthly_Aggregated_Filtered_Historic_NPCC_2021)
library(data.table)
library(forecast)
library(plotly)
Historic_NPCC_2016_2020 = read.csv('2016-2020-Historic-Data.csv')[,-3] ## remove Predicted Column
str(Historic_NPCC_2016_2020)
Historic_NPCC_2016_2020$Time = as.POSIXct(Historic_NPCC_2016_2020$Time)
summary(Historic_NPCC_2016_2020)
class(Historic_NPCC_2016_2020)
tmp = as.character(unlist(sapply(Historic_NPCC_2016_2020, class)))[-2]  ## removing 2nd time column
#### correlation ####
{
correlation = data.frame(cor(Historic_NPCC_2016_2020[, which( tmp == "numeric" )],
use = "complete.obs"))
class(correlation$hourly_load)
initially_selected_variables = row.names(correlation[correlation$hourly_load >= 0.7 |
correlation$hourly_load <= -0.7,])
multicolenarity_check = data.frame(cor(Historic_NPCC_2016_2020[,initially_selected_variables],
use = "complete.obs"))
row.names(multicolenarity_check[multicolenarity_check$Lahore_apparentTemperature < 0.8 &
multicolenarity_check$Lahore_apparentTemperature > -0.8,])
}
Filtered_Historic_NPCC_2016_2020 = Historic_NPCC_2016_2020[, c(1,2,8)] ## fetch Time, hourly_load, Lahore_Apparent_Temperature
Filtered_Historic_NPCC_2016_2020 = Filtered_Historic_NPCC_2016_2020[complete.cases(Filtered_Historic_NPCC_2016_2020), ]
Filtered_Historic_NPCC_2016_2020$Month_Year = paste0(format(Filtered_Historic_NPCC_2016_2020$Time, format = "%B"), "_",
format(Filtered_Historic_NPCC_2016_2020$Time, format = "%Y"))
Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020 = aggregate(Filtered_Historic_NPCC_2016_2020$hourly_load,
list(Filtered_Historic_NPCC_2016_2020$Month_Year), sum)
colnames(Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020) = c("Month_Year", "NPCC_Monthly_Energy_MWh")
tmp = aggregate(cbind(Filtered_Historic_NPCC_2016_2020$hourly_load,Filtered_Historic_NPCC_2016_2020$Lahore_apparentTemperature),
list(Filtered_Historic_NPCC_2016_2020$Month_Year), max)
colnames(tmp) = c("Month_Year", "NPCC_Monthly_Peak_Power_MW", "NPCC_Monthly_Max_Lahore_Apparent_Temperature_C")
Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020 = merge(tmp, Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020)
tmp = aggregate(Filtered_Historic_NPCC_2016_2020$Lahore_apparentTemperature,
list(Filtered_Historic_NPCC_2016_2020$Month_Year), min)
colnames(tmp) = c("Month_Year","NPCC_Monthly_Min_Lahore_Apparent_Temperature_C")
Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020 = merge(tmp, Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020)
## Mean apparent temperature
tmp = aggregate(Filtered_Historic_NPCC_2016_2020$Lahore_apparentTemperature,
list(Filtered_Historic_NPCC_2016_2020$Month_Year), mean)
colnames(tmp) = c("Month_Year","NPCC_Monthly_Mean_Lahore_Apparent_Temperature_C")
Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020 = merge(tmp, Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020)
Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020[,c(1,4,6)]
Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020$Date =
as.Date(paste("1" , Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020$Month_Year), format = "%d %B_%Y")
Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020 =
Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020[order(Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020$Date), ]
merge(Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020[,c(1,4,6)], Monthly_Aggregated_Filtered_Historic_NPCC_2021[,c(1,2,4)])
Monthly_Aggregated_Filtered_Historic_NPCC_2021[,c(1,2,4)]
Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020[,c(1,4,6)]
merge(Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020[,c(1,4,6)], Monthly_Aggregated_Filtered_Historic_NPCC_2021[,c(1,2,4)])
c(Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020[,c(1,4,6)], Monthly_Aggregated_Filtered_Historic_NPCC_2021[,c(1,2,4)])
cbind(Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020[,c(1,4,6)], Monthly_Aggregated_Filtered_Historic_NPCC_2021[,c(1,2,4)])
merge(Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020[,c(1,4,6)], Monthly_Aggregated_Filtered_Historic_NPCC_2021[,c(1,2,4)])
m
colnames(Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020[,c(1,4,6)])
colnames(Monthly_Aggregated_Filtered_Historic_NPCC_2021[,c(1,2,4)])
1==2
colnames(Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020[,c(1,4,6)]) == colnames(Monthly_Aggregated_Filtered_Historic_NPCC_2021[,c(1,2,4)])
merge(Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020[,c(4,6)], Monthly_Aggregated_Filtered_Historic_NPCC_2021[,c(2,4)])
typeof(Monthly_Aggregated_Filtered_Historic_NPCC_2021[,c(1,2,4)])
as.data.frame(Monthly_Aggregated_Filtered_Historic_NPCC_2021[,c(1,2,4)])
as.data.frame(Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020[,c(1,4,6)])
merge(as.data.frame(Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020[,c(1,4,6)]),
as.data.frame(Monthly_Aggregated_Filtered_Historic_NPCC_2021[,c(1,2,4)]))
d = merge(as.data.frame(Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020[,c(1,4,6)]),
as.data.frame(Monthly_Aggregated_Filtered_Historic_NPCC_2021[,c(1,2,4)]))
d
as.data.frame(Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020[,c(1,4,6)])
Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020[,c(1,4,6)][0]
Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020[,c(1,4,6)][,c(1)]
plot(Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020[,c(1,4,6)][,c(1)],Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020[,c(1,4,6)][,c(2)])
Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020[,c(1,4,6)][,c(1)]
Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020[,c(1,4,6)][,c(2)]
plot(c(1,2,3), c(1,2,3))
plot(c(1, 2, 3, 4, 5), c(3, 7, 8, 9, 12))
plot(c(1,2,3,4,5),c(1,4,9,16,25))
plot(c(1,2,3))
plot(1,2,3)
plot(1)
x <- seq(-pi,pi,0.1)
plot(x, sin(x))
par("mar")
par(mar=c(1,1,1,1))
plot(x, sin(x))
plot(Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020[,c(1,4,6)][,c(1)],Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020[,c(1,4,6)][,c(2)])
Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020[,c(1,4,6)]
typeof(Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020[,c(1)])
x = Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020[,c(1)]
y = Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020[,c(4)]
plot(x,y)
Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020[,c(1,4,6)]
```{r setup, include=FALSE}
library('sqldf')
library('ggplot2')
library('tidyr')
library('sqldf')
library('plotly')
load_data <- read.csv('Historic_NPCC_Load_Forecast_Weather_OLD.csv', header = TRUE)
setwd("~/Desktop/Medium term energy forecasting/Data Visulization/Data")
load_data <- read.csv('Historic_NPCC_Load_Forecast_Weather_OLD.csv', header = TRUE)
load_data <- read.csv('Historic_NPCC_Load_Forecast_Weather_OLD.csv', header = TRUE)
load_data$Time <- as.POSIXct(load_data$Time)
load_data1<- load_data
dt<-tidyr::separate(load_data1, Time, c("date", "time"), sep = " ")
hms<-tidyr::separate(dt, time, c("hour", "min", "secs"), sep = ":", remove=FALSE)
knitr::opts_chunk$set(echo = TRUE)
load_data <- read.csv('Historic_NPCC_Load_Forecast_Weather_OLD.csv', header = TRUE)
setwd("~/Desktop/Medium term energy forecasting/Data Visulization/Data")
load_data <- read.csv('Historic_NPCC_Load_Forecast_Weather_OLD.csv', header = TRUE)
setwd("~/Desktop/MLTF app/MLTF/data")
Historic_NPCC_2016_2020 = read.csv('2016-2020-Historic-Data.csv')[,-3] ## remove Predicted Column
str(Historic_NPCC_2016_2020)
Historic_NPCC_2016_2020$Time = as.POSIXct(Historic_NPCC_2016_2020$Time)
summary(Historic_NPCC_2016_2020)
class(Historic_NPCC_2016_2020)
tmp = as.character(unlist(sapply(Historic_NPCC_2016_2020, class)))[-2]  ## removing 2nd time column
correlation = data.frame(cor(Historic_NPCC_2016_2020[, which( tmp == "numeric" )],
use = "complete.obs"))
class(correlation$hourly_load)
initially_selected_variables = row.names(correlation[correlation$hourly_load >= 0.7 |
correlation$hourly_load <= -0.7,])
multicolenarity_check = data.frame(cor(Historic_NPCC_2016_2020[,initially_selected_variables],
use = "complete.obs"))
row.names(multicolenarity_check[multicolenarity_check$Lahore_apparentTemperature < 0.8 &
multicolenarity_check$Lahore_apparentTemperature > -0.8,])
#### correlation ####
{
correlation = data.frame(cor(Historic_NPCC_2016_2020[, which( tmp == "numeric" )],
use = "complete.obs"))
class(correlation$hourly_load)
initially_selected_variables = row.names(correlation[correlation$hourly_load >= 0.7 |
correlation$hourly_load <= -0.7,])
multicolenarity_check = data.frame(cor(Historic_NPCC_2016_2020[,initially_selected_variables],
use = "complete.obs"))
row.names(multicolenarity_check[multicolenarity_check$Lahore_apparentTemperature < 0.8 &
multicolenarity_check$Lahore_apparentTemperature > -0.8,])
}
Filtered_Historic_NPCC_2016_2020 = Historic_NPCC_2016_2020[, c(1,2,8)] ## fetch Time, hourly_load, Lahore_Apparent_Temperature
Filtered_Historic_NPCC_2016_2020 = Filtered_Historic_NPCC_2016_2020[complete.cases(Filtered_Historic_NPCC_2016_2020), ]
Filtered_Historic_NPCC_2016_2020$Month_Year = paste0(format(Filtered_Historic_NPCC_2016_2020$Time, format = "%B"), "_",
format(Filtered_Historic_NPCC_2016_2020$Time, format = "%Y"))
Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020 = aggregate(Filtered_Historic_NPCC_2016_2020$hourly_load,
list(Filtered_Historic_NPCC_2016_2020$Month_Year), sum)
colnames(Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020) = c("Month_Year", "NPCC_Monthly_Energy_MWh")
tmp = aggregate(cbind(Filtered_Historic_NPCC_2016_2020$hourly_load,Filtered_Historic_NPCC_2016_2020$Lahore_apparentTemperature),
list(Filtered_Historic_NPCC_2016_2020$Month_Year), max)
colnames(tmp) = c("Month_Year", "NPCC_Monthly_Peak_Power_MW", "NPCC_Monthly_Max_Lahore_Apparent_Temperature_C")
Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020 = merge(tmp, Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020)
tmp = aggregate(Filtered_Historic_NPCC_2016_2020$Lahore_apparentTemperature,
list(Filtered_Historic_NPCC_2016_2020$Month_Year), min)
colnames(tmp) = c("Month_Year","NPCC_Monthly_Min_Lahore_Apparent_Temperature_C")
Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020 = merge(tmp, Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020)
## Mean apparent temperature
tmp = aggregate(Filtered_Historic_NPCC_2016_2020$Lahore_apparentTemperature,
list(Filtered_Historic_NPCC_2016_2020$Month_Year), mean)
colnames(tmp) = c("Month_Year","NPCC_Monthly_Mean_Lahore_Apparent_Temperature_C")
Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020 = merge(tmp, Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020)
Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020$Date =
as.Date(paste("1" , Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020$Month_Year), format = "%d %B_%Y")
Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020 =
Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020[order(Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020$Date), ]
Historic_NPCC_2016_2020
Historic_NPCC_2021 = read.csv("NPCC Historic Data 2021-01-01-2021-10-31.csv")[,-3]
Historic_NPCC_2021$Time = as.POSIXct(Historic_NPCC_2021$Time)
summary(Historic_NPCC_2021)
class(Historic_NPCC_2021)
merge(Historic_NPCC_2016_2020,Historic_NPCC_2021 )
Historic_NPCC_2021$Time = as.POSIXct(Historic_NPCC_2021$Time)
summary(Historic_NPCC_2021)
class(Historic_NPCC_2021)
merge(Historic_NPCC_2016_2020,Historic_NPCC_2021 )
tmp = aggregate(cbind(Filtered_Historic_NPCC_2016_2020$hourly_load,Filtered_Historic_NPCC_2016_2020$Lahore_apparentTemperature),
list(Filtered_Historic_NPCC_2016_2020$Month_Year), max)
colnames(tmp) = c("Month_Year", "NPCC_Monthly_Peak_Power_MW", "NPCC_Monthly_Max_Lahore_Apparent_Temperature_C")
Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020
tmp
typeof(Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020)
Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020
merge(tmp, Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020)
tmp
Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020
Historic_NPCC_2016_2020 = read.csv('2016-2020-Historic-Data.csv')[,-3] ## remove Predicted Column
str(Historic_NPCC_2016_2020)
Historic_NPCC_2016_2020$Time = as.POSIXct(Historic_NPCC_2016_2020$Time)
summary(Historic_NPCC_2016_2020)
class(Historic_NPCC_2016_2020)
tmp = as.character(unlist(sapply(Historic_NPCC_2016_2020, class)))[-2]  ## removing 2nd time column
#### correlation ####
{
correlation = data.frame(cor(Historic_NPCC_2016_2020[, which( tmp == "numeric" )],
use = "complete.obs"))
class(correlation$hourly_load)
initially_selected_variables = row.names(correlation[correlation$hourly_load >= 0.7 |
correlation$hourly_load <= -0.7,])
multicolenarity_check = data.frame(cor(Historic_NPCC_2016_2020[,initially_selected_variables],
use = "complete.obs"))
row.names(multicolenarity_check[multicolenarity_check$Lahore_apparentTemperature < 0.8 &
multicolenarity_check$Lahore_apparentTemperature > -0.8,])
}
## aggregation on basis of monthly energy and peak power
{
Filtered_Historic_NPCC_2016_2020 = Historic_NPCC_2016_2020[, c(1,2,8)] ## fetch Time, hourly_load, Lahore_Apparent_Temperature
Filtered_Historic_NPCC_2016_2020 = Filtered_Historic_NPCC_2016_2020[complete.cases(Filtered_Historic_NPCC_2016_2020), ]
# summary(Filtered_Historic_NPCC_2016_2020)
Filtered_Historic_NPCC_2016_2020$Month_Year = paste0(format(Filtered_Historic_NPCC_2016_2020$Time, format = "%B"), "_",
format(Filtered_Historic_NPCC_2016_2020$Time, format = "%Y"))
Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020 = aggregate(Filtered_Historic_NPCC_2016_2020$hourly_load,
list(Filtered_Historic_NPCC_2016_2020$Month_Year), sum)
colnames(Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020) = c("Month_Year", "NPCC_Monthly_Energy_MWh")
tmp = aggregate(cbind(Filtered_Historic_NPCC_2016_2020$hourly_load,Filtered_Historic_NPCC_2016_2020$Lahore_apparentTemperature),
list(Filtered_Historic_NPCC_2016_2020$Month_Year), max)
colnames(tmp) = c("Month_Year", "NPCC_Monthly_Peak_Power_MW", "NPCC_Monthly_Max_Lahore_Apparent_Temperature_C")
Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020 = merge(tmp, Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020)
## Min apparent temperature
tmp = aggregate(Filtered_Historic_NPCC_2016_2020$Lahore_apparentTemperature,
list(Filtered_Historic_NPCC_2016_2020$Month_Year), min)
colnames(tmp) = c("Month_Year","NPCC_Monthly_Min_Lahore_Apparent_Temperature_C")
Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020 = merge(tmp, Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020)
## Mean apparent temperature
tmp = aggregate(Filtered_Historic_NPCC_2016_2020$Lahore_apparentTemperature,
list(Filtered_Historic_NPCC_2016_2020$Month_Year), mean)
colnames(tmp) = c("Month_Year","NPCC_Monthly_Mean_Lahore_Apparent_Temperature_C")
Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020 = merge(tmp, Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020)
# Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020 = Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020[,-c(3,5)] ## remove
tmp = data.frame(Month_Year =paste0( month.name, "_2021")[1:10])
Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020 = merge(Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020, tmp, all = TRUE)
Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020$Date =
as.Date(paste("1" , Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020$Month_Year), format = "%d %B_%Y")
Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020 =
Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020[order(Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020$Date), ]
}
library(data.table)
library(forecast)
library(plotly)
Historic_NPCC_2016_2020 = read.csv('2016-2020-Historic-Data.csv')[,-3] ## remove Predicted Column
str(Historic_NPCC_2016_2020)
Historic_NPCC_2016_2020$Time = as.POSIXct(Historic_NPCC_2016_2020$Time)
summary(Historic_NPCC_2016_2020)
class(Historic_NPCC_2016_2020)
tmp = as.character(unlist(sapply(Historic_NPCC_2016_2020, class)))[-2]  ## removing 2nd time column
#### correlation ####
{
correlation = data.frame(cor(Historic_NPCC_2016_2020[, which( tmp == "numeric" )],
use = "complete.obs"))
class(correlation$hourly_load)
initially_selected_variables = row.names(correlation[correlation$hourly_load >= 0.7 |
correlation$hourly_load <= -0.7,])
multicolenarity_check = data.frame(cor(Historic_NPCC_2016_2020[,initially_selected_variables],
use = "complete.obs"))
row.names(multicolenarity_check[multicolenarity_check$Lahore_apparentTemperature < 0.8 &
multicolenarity_check$Lahore_apparentTemperature > -0.8,])
}
Filtered_Historic_NPCC_2016_2020 = Historic_NPCC_2016_2020[, c(1,2,8)] ## fetch Time, hourly_load, Lahore_Apparent_Temperature
Filtered_Historic_NPCC_2016_2020 = Filtered_Historic_NPCC_2016_2020[complete.cases(Filtered_Historic_NPCC_2016_2020), ]
Filtered_Historic_NPCC_2016_2020$Month_Year = paste0(format(Filtered_Historic_NPCC_2016_2020$Time, format = "%B"), "_",
format(Filtered_Historic_NPCC_2016_2020$Time, format = "%Y"))
Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020 = aggregate(Filtered_Historic_NPCC_2016_2020$hourly_load,
list(Filtered_Historic_NPCC_2016_2020$Month_Year), sum)
colnames(Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020) = c("Month_Year", "NPCC_Monthly_Energy_MWh")
tmp = aggregate(cbind(Filtered_Historic_NPCC_2016_2020$hourly_load,Filtered_Historic_NPCC_2016_2020$Lahore_apparentTemperature),
list(Filtered_Historic_NPCC_2016_2020$Month_Year), max)
colnames(tmp) = c("Month_Year", "NPCC_Monthly_Peak_Power_MW", "NPCC_Monthly_Max_Lahore_Apparent_Temperature_C")
Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020 = merge(tmp, Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020)
tmp = aggregate(Filtered_Historic_NPCC_2016_2020$Lahore_apparentTemperature,
list(Filtered_Historic_NPCC_2016_2020$Month_Year), min)
colnames(tmp) = c("Month_Year","NPCC_Monthly_Min_Lahore_Apparent_Temperature_C")
Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020 = merge(tmp, Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020)
## Mean apparent temperature
tmp = aggregate(Filtered_Historic_NPCC_2016_2020$Lahore_apparentTemperature,
list(Filtered_Historic_NPCC_2016_2020$Month_Year), mean)
colnames(tmp) = c("Month_Year","NPCC_Monthly_Mean_Lahore_Apparent_Temperature_C")
Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020 = merge(tmp, Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020)
Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020$Date =
as.Date(paste("1" , Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020$Month_Year), format = "%d %B_%Y")
Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020 =
Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020[order(Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020$Date), ]
Historic_NPCC_2021 = read.csv("NPCC Historic Data 2021-01-01-2021-10-31.csv")[,-3]
Historic_NPCC_2021$Time = as.POSIXct(Historic_NPCC_2021$Time)
summary(Historic_NPCC_2021)
class(Historic_NPCC_2021)
Historic_NPCC_2021 = Historic_NPCC_2021[, c(1,2,8)] ## fetch Time,hourly_load, Lahore_Apparent_Temperature
Historic_NPCC_2021 = Historic_NPCC_2021[complete.cases(Historic_NPCC_2021), ]
Historic_NPCC_2021$Month_Year = paste0(format(Historic_NPCC_2021$Time, format = "%B"), "_",
format(Historic_NPCC_2021$Time, format = "%Y"))
Monthly_Aggregated_Filtered_Historic_NPCC_2021 = aggregate(Historic_NPCC_2021$hourly_load,
list(Historic_NPCC_2021$Month_Year), sum)
colnames(Monthly_Aggregated_Filtered_Historic_NPCC_2021) = c("Month_Year", "NPCC_Monthly_Energy_MWh")
tmp = aggregate(Historic_NPCC_2021$Lahore_apparentTemperature, list(Historic_NPCC_2021$Month_Year), mean)
colnames(tmp) = c("Month_Year", "NPCC_Monthly_Mean_Lahore_Apparent_Temperature_C")
Monthly_Aggregated_Filtered_Historic_NPCC_2021 = merge(tmp, Monthly_Aggregated_Filtered_Historic_NPCC_2021)
tmp = aggregate(Historic_NPCC_2021$hourly_load,
list(Historic_NPCC_2021$Month_Year), max)
colnames(tmp) = c("Month_Year", "NPCC_Monthly_Peak_Power_MW")
Monthly_Aggregated_Filtered_Historic_NPCC_2021 = merge(tmp, Monthly_Aggregated_Filtered_Historic_NPCC_2021)
Monthly_Aggregated_Filtered_Historic_NPCC_2021$Date =
as.Date(paste("1" , Monthly_Aggregated_Filtered_Historic_NPCC_2021$Month_Year), format = "%d %B_%Y")
Monthly_Aggregated_Filtered_Historic_NPCC_2021 =
Monthly_Aggregated_Filtered_Historic_NPCC_2021[order(Monthly_Aggregated_Filtered_Historic_NPCC_2021$Date), ]
Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020[,c(1,4,6)]
rbind(Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020[,c(1,4,6)], Monthly_Aggregated_Filtered_Historic_NPCC_2021[,c(1,2,4)])
x = rbind(Monthly_Aggregated_Filtered_Historic_NPCC_2016_2020[,c(1,4,6)], Monthly_Aggregated_Filtered_Historic_NPCC_2021[,c(1,2,4)])
x
x['Month_Year']
x['NPCC_Monthly_Peak_Power_MW']
plot(x['Month_Year'], x['NPCC_Monthly_Peak_Power_MW'])
length(x['NPCC_Monthly_Peak_Power_MW'])
x['NPCC_Monthly_Peak_Power_MW']
typeof(x['NPCC_Monthly_Peak_Power_MW'])
unlist(x['NPCC_Monthly_Peak_Power_MW'])
unlist(x['NPCC_Monthly_Peak_Power_MW'])
plot(x[, c(1)], x[, c(2)])
x[, c(2)]
x[, c(1)]
as.factor(x[, c(1)])
plot(as.factor(x[, c(1)]), x[, c(2)])
as.factor(x[, c(1)])
typeof(as.factor(x[, c(1)]))
length(as.factor(x[, c(1)]))
length(x[, c(2)])
x[, c(2)]
library('ggplot2')
library('tidyr')
library('sqldf')
library('plotly')
load_data <- read.csv('Historic_NPCC_Load_Forecast_Weather_OLD.csv', header = TRUE)
setwd("~/Desktop/Medium term energy forecasting/Data Visulization/Data")
load_data <- read.csv('Historic_NPCC_Load_Forecast_Weather_OLD.csv', header = TRUE)
